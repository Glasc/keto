---
import { getImage } from "@astrojs/image";
import { useSanityClient } from "astro-sanity";
import { Categories, Category, Product } from "./Categories";

export async function getCategories(): Promise<Category[]> {
  try {
    const query = `*[_type == "category"]{
  _id, 
  products[]->{_id, _type, price, priceSmall, priceMedium, "image":image.asset->url, priceLarge, description, title}, 
  title, 
  slug
}`;
    const listOfCategories = (await useSanityClient().fetch(
      query
    )) as Category[];

    return listOfCategories;
  } catch (err) {
    return [];
  }
}

const transformProductImage = async (product: Product): Promise<Product> => {
  return {
    ...product,
    image:
      "https://cdn.sanity.io/images/45fs2a0y/production/2bc3880b5687cecac4d1090205bc49d0b2d09b6b-194x204.jpg",
  };
};

const transformUrl = async (url: string): Promise<string> => {
  const { src } = await getImage({
    src: url,
    width: 400,
    height: 300,
  });

  return src || "xd";
};

let categories = await getCategories();

let listOfImages = categories
  .map((category) => category.products)
  .flat()
  .map((product) => product?.image);

const transformedImages = await Promise.all(
  listOfImages.map((url) =>
    transformUrl(
      url ||
        "https://cdn.sanity.io/images/45fs2a0y/production/2bc3880b5687cecac4d1090205bc49d0b2d09b6b-194x204.jpg"
    )
  )
);

// replace categories images with transformedImages
categories.forEach((category) => {
  category?.products?.forEach((product, index) => {
    product.image = transformedImages[index];
  });
});

---

<Categories categories={categories} client:load />
<!-- <img src={src} alt="xd" /> -->
